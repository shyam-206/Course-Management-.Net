@model List<CourseManagement_Model.ViewModel.CourseModel>
<style>
    body {
        background-color: #f8f9fa;
    }

    .card {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
    }

    .card-body {
        display: flex;
        flex-direction: column;
    }

        .card-body .btn {
            margin-top: auto;
        }

    .card-description {
        max-height: 6em; /* Limit height to roughly 3 lines */
        overflow: hidden;
        position: relative;
        transition: max-height 0.5s ease;
    }

    .show-more {
        background: none;
        border: none;
        color: #007bff;
        font-weight: bold;
        text-decoration: underline;
        cursor: pointer;
    }

    .card-footers {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: auto;
    }

    .btn-disabled {
        background-color: #6c757d;
        border-color: #6c757d;
        cursor: not-allowed;
    }

    .custom-border-shadow {
        border: 2px solid black; /* Customize the border color and width */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Customize the shadow */
    }
</style>
@if (@TempData["AddAmount"] != null)
{
    <script>
        toastr.success('@TempData["AddAmount"]');
    </script>
}
<div class="container-fluid mx-2">

    <div class="my-2 bg-primary-subtle p-2 d-flex align-items-center rounded-3 custom-border-shadow justify-content-end">
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
            Add Fund
        </button>
        <div class="mx-2 fw-bold fs-3 text-primary">Balance : @ViewBag.Balance</div>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title fs-3" id="exampleModalLabel">Add Your Fund in Your Account</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form action="AddFund" method="post">
                        <div class="form-group">
                            <label class="fs-3 mb-2">Add Amount</label>
                            <input class="form-control col-6" name="Amount" />
                        </div>
                        <div class="form-button mt-3"><button type="submit" class="btn btn-success">Add Fund</button></div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-3">
        @if (Model != null)
        {
            foreach (var item in Model)
            {
                <div class="col-md-4 mb-4">
                    <div class="card h-100">
                        <img src="~/Content/CourseImages/@item.Image" class="card-img-top" alt="@item.Title">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@item.Title</h5>
                            <div class="card-description">
                                <p class="card-text">@item.Description</p>

                            </div>
                            <div class="card-footers">
                                <button class="show-more">Show More</button>
                                <a href="ViewCourse?CourseId=@item.CourseId" class="btn btn-primary mt-auto align-self-start">View Course</a>
                            </div>

                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>


<script>
    $(document).ready(function () {
        $('.show-more').click(function () {
            const cardBody = $(this).closest('.card-body');
            const description = cardBody.find('.card-description');
            const isExpanded = description.hasClass('expanded');
            description.toggleClass('expanded');
            $(this).text(isExpanded ? 'Show More' : 'Show Less');
            if (isExpanded) {
                description.css('max-height', '6em');
            } else {
                description.css('max-height', description.get(0).scrollHeight);
            }
        });
    });
</script>

